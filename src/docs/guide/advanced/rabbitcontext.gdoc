Besides the @rabbitMessagePublisher@, the @rabbitContext@ is the bean users will most likely interact with.  While you may never need to use this bean, it can be useful.
As with any Spring bean, the @rabbitContext@ can be injected into any Spring managed bean, such as services, controllers, and rabbit consumers.

Below are some use cases which may be helpful for users wanting to use the plugin outside of its conventions.

* The @rabbitContext.getConnection()@ method returns a @ConnectionContext@ object, which exposes the RabbitMQ @Connection@ object through its own @getConnection()@ method.
* The @rabbitContext.getChannel()@ method returns a RabbitMQ @Channel@ object, which can be used to manually send messages, consume messages, and much more.
* The @rabbitContext.startConsumers()@ method is useful when a user of the plugin wants to control when to start consumer messages during the application startup.
