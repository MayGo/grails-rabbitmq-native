By default, the publisher opens a new channel for each message it publishes. This is acceptable when sending
individual messages, but when bulk publishing is required, it is much more efficient to open a single channel
and use it for batches of messages.

{note}
As an example, during testing it took about 65 milliseconds to send one message.  If 1000 messages are sent,
the total time to publish is about 65 seconds! Using a single channel for the same operation takes about
1 millisecond per message, cutting the time down to 1 second for all 1000 messages.

These times are just an example based on testing, but they will differ based on network latency and server load.
{note}

While a channel may be manually created by authors using the @rabbitContext@, the publisher provides an easy way
to send many messages with a single channel.  See the example below.

{code}
rabbitMessagePublisher.withChannel { channel ->
    1000.times { i ->
        send {
            routingKey = "foobar"
            body = "Bulk message $i"
        }
    }
}
{code}

There is also a @withChannel@ method that takes in a connection name for multi-server setups.

{code}
rabbitMessagePublisher.withChannel("connection1") { channel ->
    1000.times { i ->
        send {
            routingKey = "foobar"
            body = "Bulk message $i on connection1"
        }
    }
}
{code}

All of the @send@ and @rpc@ methods available with the publisher can be used with @withChannel@.